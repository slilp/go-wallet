// Code generated by MockGen. DO NOT EDIT.
// Source: ./wallet.go
//
// Generated by this command:
//
//	mockgen -source=./wallet.go -destination=./mocks/mock_wallet_service.go -package=mock_commands
//

// Package mock_commands is a generated GoMock package.
package mock_commands

import (
	reflect "reflect"

	api_gen "github.com/slilp/go-wallet/internal/port/restapis/api_gen"
	gomock "go.uber.org/mock/gomock"
)

// MockWalletService is a mock of WalletService interface.
type MockWalletService struct {
	ctrl     *gomock.Controller
	recorder *MockWalletServiceMockRecorder
	isgomock struct{}
}

// MockWalletServiceMockRecorder is the mock recorder for MockWalletService.
type MockWalletServiceMockRecorder struct {
	mock *MockWalletService
}

// NewMockWalletService creates a new mock instance.
func NewMockWalletService(ctrl *gomock.Controller) *MockWalletService {
	mock := &MockWalletService{ctrl: ctrl}
	mock.recorder = &MockWalletServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletService) EXPECT() *MockWalletServiceMockRecorder {
	return m.recorder
}

// HandleCreate mocks base method.
func (m *MockWalletService) HandleCreate(userId string, req api_gen.WalletRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleCreate", userId, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleCreate indicates an expected call of HandleCreate.
func (mr *MockWalletServiceMockRecorder) HandleCreate(userId, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCreate", reflect.TypeOf((*MockWalletService)(nil).HandleCreate), userId, req)
}

// HandleDelete mocks base method.
func (m *MockWalletService) HandleDelete(walletId string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleDelete", walletId)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleDelete indicates an expected call of HandleDelete.
func (mr *MockWalletServiceMockRecorder) HandleDelete(walletId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleDelete", reflect.TypeOf((*MockWalletService)(nil).HandleDelete), walletId)
}

// HandleUpdateInfo mocks base method.
func (m *MockWalletService) HandleUpdateInfo(walletId string, req api_gen.WalletRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleUpdateInfo", walletId, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleUpdateInfo indicates an expected call of HandleUpdateInfo.
func (mr *MockWalletServiceMockRecorder) HandleUpdateInfo(walletId, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleUpdateInfo", reflect.TypeOf((*MockWalletService)(nil).HandleUpdateInfo), walletId, req)
}
